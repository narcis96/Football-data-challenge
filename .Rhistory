install.packages("ggplot2", lib="/data/Rpackages/")
library(ggplot2, lib.loc="/var/folders/rj/lq903f1n77s0rm3gmb3f_nt40000gn/T//RtmpWUxXSR/downloaded_packages")
library(pplication/x-gzip, lib.loc="/var/folders/rj/lq903f1n77s0rm3gmb3f_nt40000gn/T//RtmpWUxXSR/downloaded_packages")
install.packages("ggplot2")
install.packages("which")
packages <- available.packages()[,'Package']
packages
setRepositories()
install.packages("which")
install.packages("which" as lib)
library(installr)
updateR()
updateR()
install.packages("installr")
.libPaths()
?Startup
install.packages("installr")
install.packages("which")
install.packages("which")
install.packages("RJSONIO", repos = "http://www.omegahat.org/R", type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_0.9.1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("nnet")
install.packages("nnet")
update.packages()
path.package()
.libPaths( c( .libPaths(), "~/userLibrary") )
path.package()
.libPaths()
.libPaths()
.libPaths( c( .libPaths(), "~/userLibrary") )
.libPaths()
getwd()
.libPaths("/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
.libPaths()
install.packages("nnet")
install.packages("ggplot2", lib="/var/folders/rj/lq903f1n77s0rm3gmb3f_nt40000gn/T//RtmpKYWo70/downloaded_packages")
install.packages("nnet", lib="/var/folders/rj/lq903f1n77s0rm3gmb3f_nt40000gn/T//RtmpKYWo70/downloaded_packages")
nnet
library(http://cran.rstudio.com/bin/macosx/el-capitan/contrib/3.4/nnet_7.3-12.tgz)
library("http://cran.rstudio.com/bin/macosx/el-capitan/contrib/3.4/nnet_7.3-12.tgz")
install.packages(
"http://cran.r-project.org/src/contrib/Archive/boot/boot_1.3-7.tar.gz",
repos = NULL, type = "source"
)
install.packages(
"https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.4/nnet_7.3-12.tgz",
repos = NULL, type = "source"
)
nnet
which.is
which.max(values)
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
train = read.csv("./trainSet/train.csv",header = TRUE,sep=",")
test = read.csv("./testSet/test.csv",header = TRUE,sep=",")
for(i in 449:449)#length(test[,1]))
{
values = numeric(3)
for(j  in 1:3)
{
array = unlist(test[i,seq(from = 4 + j, to = length(test[i,]), by=3)], use.names = FALSE);
values[j] = mean(array[!is.na(array)])
}
#Drow = !is.na(unlist(test[i,seq(from = 6, to = length(test[i,]), by=3)], use.names = FALSE))
#AwayTeam = !is.na(unlist(test[i,seq(from = 7, to = length(test[i,]), by=3)], use.names = FALSE))
#homeAverage = mean(homeTeam)
#drowAverage = mean(Drow)
#awayAverage = mean(AwayTeam)
#print(homeAverage)
#print(drowAverage)i
#print(awayAverage)
#min = 10
#if(homeAverage < min)
#{
#   answer = 'H'
#  min = homeAverage
#}
#if(drowAverage < min)
#{
#   answer = 'D'
#  min = drowAverage
#}
#if(awayAverage < min)
#{
#   answer = 'A'
#  min = drowAverage
#}
#MyData <- data.frame(ID = i, FTR = answer)
#  if(i > 1)
#   total <- rbind(total, MyData)
#  else
#   total = MyData
}
write.csv(total, file = "AverageOdds.csv",row.names=FALSE)
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
train = read.csv("./trainSet/train.csv",header = TRUE,sep=",")
test = read.csv("./testSet/test.csv",header = TRUE,sep=",")
for(i in 449:449)#length(test[,1]))
{
values = numeric(3)
for(j  in 1:3)
{
array = unlist(test[i,seq(from = 4 + j, to = length(test[i,]), by=3)], use.names = FALSE);
values[j] = mean(array[!is.na(array)])
}
#Drow = !is.na(unlist(test[i,seq(from = 6, to = length(test[i,]), by=3)], use.names = FALSE))
#AwayTeam = !is.na(unlist(test[i,seq(from = 7, to = length(test[i,]), by=3)], use.names = FALSE))
#homeAverage = mean(homeTeam)
#drowAverage = mean(Drow)
#awayAverage = mean(AwayTeam)
#print(homeAverage)
#print(drowAverage)i
#print(awayAverage)
#min = 10
#if(homeAverage < min)
#{
#   answer = 'H'
#  min = homeAverage
#}
#if(drowAverage < min)
#{
#   answer = 'D'
#  min = drowAverage
#}
#if(awayAverage < min)
#{
#   answer = 'A'
#  min = drowAverage
#}
#MyData <- data.frame(ID = i, FTR = answer)
#  if(i > 1)
#   total <- rbind(total, MyData)
#  else
#   total = MyData
}
#write.csv(total, file = "AverageOdds.csv",row.names=FALSE)
which.max(values)
which.min(values)
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
train = read.csv("./trainSet/train.csv",header = TRUE,sep=",")
test = read.csv("./testSet/test.csv",header = TRUE,sep=",")
for(i in 449:449)#length(test[,1]))
{
values = numeric(3)
for(j  in 1:3)
{
array = unlist(test[i,seq(from = 4 + j, to = length(test[i,]), by=3)], use.names = FALSE);
values[j] = mean(array[!is.na(array)])
}
index = which.min(values);
if(index == 1)
answer = 'H'
else if(index == 2)
answer = 'D'
else
ansert = 'A'
MyData <- data.frame(ID = i, FTR = answer)
if(i > 1)
total <- rbind(total, MyData)
else
total = MyData
}
write.csv(total, file = "AverageOdds.csv",row.names=FALSE)
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
train = read.csv("./trainSet/train.csv",header = TRUE,sep=",")
test = read.csv("./testSet/test.csv",header = TRUE,sep=",")
for(i in 1:length(test[,1]))
{
values = numeric(3)
for(j  in 1:3)
{
array = unlist(test[i,seq(from = 4 + j, to = length(test[i,]), by=3)], use.names = FALSE);
values[j] = mean(array[!is.na(array)])
}
index = which.min(values);
if(index == 1)
answer = 'H'
else if(index == 2)
answer = 'D'
else
ansert = 'A'
MyData <- data.frame(ID = i, FTR = answer)
if(i > 1)
total <- rbind(total, MyData)
else
total = MyData
}
write.csv(total, file = "AverageOdds.csv",row.names=FALSE)
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
train = read.csv("./trainSet/train.csv",header = TRUE,sep=",")
test = read.csv("./testSet/test.csv",header = TRUE,sep=",")
for(i in 1:10)#length(test[,1]))
{
values = numeric(3)
for(j in 1:3)
{
array = unlist(test[i,seq(from = 4 + j, to = length(test[i,]), by=3)], use.names = FALSE);
values[j] = mean(array[!is.na(array)])
}
index = which.min(values);
if(index == 1)
answer = 'H'
else if(index == 2)
answer = 'D'
else
ansert = 'A'
print(values)
print(index)
MyData <- data.frame(ID = i, FTR = answer)
if(i > 1)
total <- rbind(total, MyData)
else
total = MyData
}
write.csv(total, file = "AverageOdds.csv",row.names=FALSE)
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
train = read.csv("./trainSet/train.csv",header = TRUE,sep=",")
test = read.csv("./testSet/test.csv",header = TRUE,sep=",")
for(i in 1:10)#length(test[,1]))
{
values = numeric(3)
for(j in 1:3)
{
array = unlist(test[i,seq(from = 4 + j, to = length(test[i,]), by=3)], use.names = FALSE);
values[j] = mean(array[!is.na(array)])
}
index = which.min(values);
if(index == 1)
answer = 'H'
else if(index == 2)
answer = 'D'
else
answer = 'A'
print(values)
print(index)
MyData <- data.frame(ID = i, FTR = answer)
if(i > 1)
total <- rbind(total, MyData)
else
total = MyData
}
write.csv(total, file = "AverageOdds.csv",row.names=FALSE)
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
#train = read.csv("./trainSet/train.csv",header = TRUE,sep=",")
test = read.csv("./testSet/test.csv",header = TRUE,sep=",")
for(i in 1:length(test[,1]))
{
values = numeric(3)
for(j in 1:3)
{
array = unlist(test[i,seq(from = 4 + j, to = length(test[i,]), by=3)], use.names = FALSE);
values[j] = mean(array[!is.na(array)])
}
index = which.min(values);
if(index == 1)
answer = 'H'
else if(index == 2)
answer = 'D'
else
answer = 'A'
MyData <- data.frame(ID = i, FTR = answer)
if(i > 1)
total <- rbind(total, MyData)
else
total = MyData
}
write.csv(total, file = "AverageOdds.csv",row.names=FALSE)
setwd("/Users/gemenenarcis/Documents/MATLAB/Football-data-challenge/")
#train = read.csv("./trainSet/train.csv",header = TRUE,sep=",")
test = read.csv("./testSet/test.csv",header = TRUE,sep=",")
for(i in 1:length(test$HomeTeam))
{
values = numeric(3)
for(j in 1:3)
{
array = unlist(test[i,seq(from = 4 + j, to = length(test[i,]), by=3)], use.names = FALSE);
values[j] = mean(array[!is.na(array)])
}
index = which.min(values);
if(index == 1)
answer = 'H'
else if(index == 2)
answer = 'D'
else
answer = 'A'
MyData <- data.frame(ID = i, FTR = answer)
if(i > 1)
total <- rbind(total, MyData)
else
total = MyData
}
write.csv(total, file = "AverageOdds.csv",row.names=FALSE)
